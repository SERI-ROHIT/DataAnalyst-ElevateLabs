# -*- coding: utf-8 -*-
"""project 1 DA .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wCCu-4kVOhmGQ6237_bRwFsr61U4ySOc
"""

# Step 1: Import libraries
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Step 2: Load the dataset
file_path = "/content/Retail business performance and profit dataset.csv"
df = pd.read_csv(file_path)  # encoding fix if needed

# Step 3: Data cleaning
df.dropna(inplace=True)

# Convert date columns
df['Order Date'] = pd.to_datetime(df['Order Date'], errors='coerce')
df['Ship Date'] = pd.to_datetime(df['Ship Date'], errors='coerce')

# Drop any rows with invalid dates
df.dropna(subset=['Order Date', 'Ship Date'], inplace=True)

# Step 4: Calculate Inventory Days (proxy)
df['Inventory_Days'] = (df['Ship Date'] - df['Order Date']).dt.days

# Step 5: Calculate Profit Margin
df['Profit_Margin'] = df['Profit'] / df['Sales']
df.replace([float('inf'), -float('inf')], 0, inplace=True)

# Step 6: Grouped profit margin summary
category_summary = df.groupby(['Category', 'Sub-Category']).agg({
    'Sales': 'sum',
    'Profit': 'sum',
    'Profit_Margin': 'mean'
}).reset_index()
category_summary.to_csv("category_profit_summary.csv", index=False)

# Step 7: Correlation between Inventory Days and Profitability
corr = df[['Inventory_Days', 'Profit_Margin']].corr()
print("\nCorrelation between Inventory Days and Profit Margin:\n", corr)

# Visualize
sns.scatterplot(data=df, x='Inventory_Days', y='Profit_Margin')
plt.title("Inventory Days vs Profit Margin")
plt.xlabel("Inventory Days")
plt.ylabel("Profit Margin")
plt.grid(True)
plt.show()

# Step 8: Identify slow-moving & overstocked items
inv_threshold = df['Inventory_Days'].quantile(0.75)
profit_threshold = df['Profit_Margin'].quantile(0.25)

df['Item_Type'] = df.apply(
    lambda row: 'Slow-Mover' if row['Inventory_Days'] > inv_threshold and row['Profit_Margin'] < profit_threshold else 'Normal',
    axis=1
)

# Export enriched dataset for Power BI
df.to_csv("retail_clean_enriched.csv", index=False)