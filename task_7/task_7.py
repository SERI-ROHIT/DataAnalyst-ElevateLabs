# -*- coding: utf-8 -*-
"""task_7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bxsu4f95tkdFBZgVuBtugMAw6bk9Plqx
"""

import os
import sqlite3
import random

# Delete the existing database file if it exists
if os.path.exists('sales_data.db'):
    os.remove('sales_data.db')
    print("Existing database file deleted.")

# Connect to SQLite database (will create a new file)
conn = sqlite3.connect('sales_data.db')
cursor = conn.cursor()


# Create the sales table
cursor.execute('''
    CREATE TABLE IF NOT EXISTS sales (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        product TEXT,
        quantity INTEGER,
        price REAL
    )
''')

# Clear old data (optional, for re-runs)
cursor.execute('DELETE FROM sales')

# List of sample products
products = ['Pen', 'Notebook', 'Pencil', 'Eraser', 'Marker', 'Scale', 'Sharpener', 'Highlighter']

# Generate 200 random records
sample_data = []
for _ in range(200):
    product = random.choice(products)
    quantity = random.randint(1, 30)  # Quantity between 1 and 30
    price = round(random.uniform(0.5, 5.0), 2)  # Price between 0.5 and 5.0
    sample_data.append((product, quantity, price))

# Insert generated records into the sales table
cursor.executemany('INSERT INTO sales (product, quantity, price) VALUES (?, ?, ?)', sample_data)

# Commit and close
conn.commit()
conn.close()

print("âœ… 200 random sales records inserted successfully.")

import pandas as pd

# Reconnect to database
conn = sqlite3.connect('sales_data.db')

# SQL query to calculate total quantity and revenue per product
query = '''
    SELECT product,
           SUM(quantity) AS total_qty,
           SUM(quantity * price) AS revenue
    FROM sales
    GROUP BY product
'''

# Execute query and load into DataFrame
df = pd.read_sql_query(query, conn)
conn.close()

# Print result
print(" Sales Summary:\n")
print(df)

import matplotlib.pyplot as plt

# Plot bar chart
df.plot(kind='bar', x='product', y='revenue', legend=False, color='orange')
plt.title('Revenue by Product')
plt.xlabel('Product')
plt.ylabel('Total Revenue')
plt.grid(axis='y')
plt.tight_layout()
plt.savefig('sales_chart.png')  # Optional: Save as PNG
plt.show()